(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{363:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"持续集成和持续部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持续集成和持续部署"}},[t._v("#")]),t._v(" 持续集成和持续部署")]),t._v(" "),s("p",[t._v("编写了自动化部署脚本，将人工操作步骤从7步减少到2步，显著降低了操作错误率和成本。")]),t._v(" "),s("h2",{attrs:{id:"git-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-命令"}},[t._v("#")]),t._v(" git 命令")]),t._v(" "),s("div",{staticClass:"language-md extra-class"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[t._v('git config --global user.name "尘少"\ngit config --global user.email "1982******@qq.com"\n\ngit init \n\n本地代码关联远程仓库\ngit remote add origin https://github.com/forfreeagainst/zhrx \n\n拉取远程仓库分支 \ngit fetch\n\n该分支不存在，创建该分支，并切换到该分支\ngit checkout -b main\n\n查看所有分支和当前分支\ngit branch\n\n切换分支\ngit checkout dev\n\n//弄到暂存区\ngit add .\n\ngit commit -m \'提交\'\n\n撤销commit \ngit reset --soft HEAD^\n\npush之前没有pull\ngit checkout '),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("your-branch-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\ngit pull origin "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("remote-branch-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" --rebase\ngit push origin "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("your-branch-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n将开发分支合并到主分支，目标分支为master,切换到master\ngit pull origin dev\ngit checkout master\ngit pull origin master\ngit merge dev\ngit status(查看冲突)\ngit push origin master\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- git push -u origin master（首次推送，建立长期关系，只需git pull,git push） --\x3e")]),t._v("\n\n// 回退版本：git reset会影响到本地仓库、暂存区和工作区的状态\n// git revert则不会影响暂存区和工作区，只会在提交历史中添加一个新的提交来撤销之前的更改。\ngit log：查看git日志，也可以查看版本号\ngit revert -n 版本号：本地回退到某个版本\ngit commit -m '提交信息'：提交更改\ngit push：推送到远程仓库\n\n在同一个文件操作，同事先提交代码，自己仍要提交。\ngit stash  暂存一下\n(git stash用于保存当前工作目录的修改，以便稍后恢复，而git commit用于将当前工作目录的修改提交到本地仓库。)\ngit pull origin 所选分支\ngit stash pop 撤销暂存\n解决下冲突\ngit add .\ngit commit -m ''\ngit push origin 所选分支\n\n//拉取项目\ngit init\ngit remote add origin 仓库地址\ngit fetch\ngit checkout main\ngit pull origin main\ngit checkout dev\ngit pull origin dev\ngit branch\n\n比较两个分支差异\ngit diff 分支1 分支2\n\ngithub的git clone失败：SSL peer certificate or SSH remote key was not OK\ngit config --global user.name \"用户名\"\ngit config --global user.email \"邮箱\"\ngit config --global http.sslVerify false\n")])])]),s("h2",{attrs:{id:"git命令补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git命令补充"}},[t._v("#")]),t._v(" Git命令补充")]),t._v(" "),s("ul",[s("li",[t._v("git status --porcelain：# 检查是否有未提交的更改 （ M vant/packages/vant-use/src/useWindowSize/index.ts）")]),t._v(" "),s("li",[t._v("git branch --show-current：显示当前分支")]),t._v(" "),s("li",[t._v("git status -s：显示更改状态（M：修改，D：删除，??: 新增）")]),t._v(" "),s("li",[t._v("git branch: 显示所有分支，同时会严明当前在哪个分支")])]),t._v(" "),s("h2",{attrs:{id:"linux命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux命令"}},[t._v("#")]),t._v(" linux命令")]),t._v(" "),s("ul",[s("li",[t._v("ls -a：ls列出当前目录下的文件和文件夹，-a,显示所有文件，包括隐藏文件")]),t._v(" "),s("li",[t._v("rm -rf .git 删除原 Git 关联信息")]),t._v(" "),s("li",[t._v("rm -rf：rm删除文件或目录，-r递归删除，-f强制删除，不提示确认，直接删除。危险操作，大多数无法还原！！！")])]),t._v(" "),s("h2",{attrs:{id:"常见bash命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见bash命令"}},[t._v("#")]),t._v(" 常见bash命令")]),t._v(" "),s("div",{staticClass:"language-md extra-class"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[t._v('set -e  // 脚本一旦遇到执行失败的命令，就立即终止执行。\n\n// 如果 RELEASE_TAG 是空 就执行。-z是检查字符串的长度为零，-n是检查字符串的长度不为零\nif [[ -z $RELEASE_TAG ]]; then\n    // 直接将指定的字符串输出到终端\n    echo "RELEASE_TAG 为空。"\nelse\n    echo "RELEASE_TAG 不为空，其值为: $RELEASE_TAG"\nfi\n\n// 显示一个提示信息，询问用户是否确定要发布指定版本，只读取用户输入的一个字符，并且禁用反斜杠的转义功能。\n// -r 反斜杠会被当作普通字符处理，避免用户输入的反斜杠被错误解析\nread -p "Releasing $VERSION - are you sure? (y/n) " -n 1 -r\n\n// ='),s("span",{pre:!0,attrs:{class:"token strike"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token content"}},[t._v(" 正则表达式匹配操作符，^[Yy]$ 表示匹配只包含一个字符且该字符为 Y 或者 y 的字符串。\nif [[ $REPLY =")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("~")])]),t._v(" ^[Yy]$ ]]; then\n\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deploy.sh - 自动化部署脚本")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 步骤1：确认部署环境")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入要部署的环境 (test/prod): "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prod"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误：环境参数必须是 test 或 prod"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 步骤2：执行部署流程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"开始部署到 '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(' 环境..."')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.1 拉取最新代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误：代码拉取失败"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.2 安装依赖")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误：依赖安装失败"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.3 执行构建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prod"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build:prod\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build:test\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误：构建失败"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.4 部署到服务器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-avz")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--delete")]),t._v(" ./dist/ user@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${env}")]),t._v("-server:/var/www/html/\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"✅ 成功部署到 '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(' 环境"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"❌ 部署失败"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),s("h2",{attrs:{id:"github-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions"}},[t._v("#")]),t._v(" Github Actions")]),t._v(" "),s("p",[t._v("手机下载Authenticator，里面有验证码，登录/确认身份用的。")])])}),[],!1,null,null,null);s.default=e.exports}}]);