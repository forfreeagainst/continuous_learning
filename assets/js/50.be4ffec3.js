(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{371:function(t,a,s){"use strict";s.r(a);var n=s(25),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),a("h2",{attrs:{id:"q-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[t._v("#")]),t._v(" Q & A")]),t._v(" "),a("p",[t._v("前端开发，说一下你的性能优化是怎么做的？你们公司性能优化的衡量指标有哪些？是否有真实用户的衡量指标？")]),t._v(" "),a("h2",{attrs:{id:"设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备"}},[t._v("#")]),t._v(" 设备")]),t._v(" "),a("p",[t._v("Android 版本， Android 5.0及以上\nIOS版本，IOS9.0及以上\n屏幕兼容性：自适应屏幕")]),t._v(" "),a("h2",{attrs:{id:"性能需求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能需求"}},[t._v("#")]),t._v(" 性能需求")]),t._v(" "),a("ol",[a("li",[t._v("在 95%的情况下，一般时段响应事件不超过1.5秒，高峰时段不超过3秒。\n打开功能菜单从点击到 第一个界面显示出来所需要的时间 不得超过 300毫秒。")]),t._v(" "),a("li",[t._v("在推荐配置环境下：登录响应时间在2 秒内，刷新页面响应时间在 2秒内，\n刷新页面列表响应时间 2秒内，打开信息条目响应时间1秒内。")]),t._v(" "),a("li",[t._v("每天手机登录用户数 为1000左右。")])]),t._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("h3",{attrs:{id:"从浏览器地址栏输入url到显示⻚面的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从浏览器地址栏输入url到显示⻚面的步骤"}},[t._v("#")]),t._v(" 从浏览器地址栏输⼊url到显示⻚⾯的步骤")]),t._v(" "),a("ol",[a("li",[t._v("url 解析")])]),t._v(" "),a("h4",{attrs:{id:"浏览器渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染过程"}},[t._v("#")]),t._v(" 浏览器渲染过程")]),t._v(" "),a("p",[t._v("解析：script:async、defer  link:prefetch、repload")]),t._v(" "),a("p",[t._v("最初是加载和构建阶段。加载阶段：这个阶段中，浏览器会从上到下加载一个HTML页面，并解析文档中的内容。\n如果它遇到外部资源，比如CSS文件、图片或者JS文件，那么浏览器会发起额外的HTTP请求来获取它们，当浏览器\n加载到JS文件时，默认情况下，浏览器会暂停HTML解析。等待JS加载并执行完成后，才继续处理后续的内容。除非\n脚本使用了async /defer 属性 ，否则JS会阻塞页面的解析。这是因为JS 可能会修改 DOM结构。浏览器需要\n确保解析和执行的顺序一致。当HTML解析逐步完成，并且关键的资源（如CSS）已加载后，浏览器就会开始构建\n页面的渲染结构。\n构建阶段：\n它会将HTML构建成一个DOM树，CSS文件则会被解析成CSSOM树，即CSS对象模型树。DOM树和CSSOM树会进一步合并，\n形成渲染树。渲染树只包含可见元素。如果一个元素的display:none被应用，它就不会进入渲染树。\n（（DOM 树仍然包含该节点）（渲染树 = DOM 树 + CSSOM 树，但 display: none 的节点会被过滤掉））\n而像opacity: 0;或者visibility:hidden这类的元素，仍然会在渲染树中，但不会被绘制。\n最终我们进入到了渲染阶段。根据渲染树，浏览器会计算每个节点的布局（Layout：计算节点尺寸/位置）信息，比如\n大小、位置等，然后根据计算好的信息，将页面绘制(Paint：像素填充到屏幕)到屏幕上，将最终的网页展示给我们。")]),t._v(" "),a("p",[t._v("浏览器的渲染是单线程的。\n也就是说JS执行、布局、绘制，这些任务都在主线程上完成。如果任务过多或者过于耗时，就会导致页面卡顿。\n这里就有几个优化主线程性能的技巧，第一是尽量减少DOM操作。我们可以使用浏览器的批量更新机制，即让\n浏览器对多次DOM操作进行合并，避免频繁触发重排和重绘。我们可以使用DocumentFragment或者\nrequestAnimationFrame()")]),t._v(" "),a("h5",{attrs:{id:"补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),a("p",[t._v("DocumentFragment，文档片段接口，表示一个没有父对象的最小文档对象。")]),t._v(" "),a("p",[t._v("它被作为一个轻量版的 Document 使用，就像标准的 document 一样，存储由节点（nodes）组成的文档结构。与 document 相比，最大的区别是它不是真实 DOM 树的一部分，它的变化不会触发 DOM 树的重新渲染，且不会对性能产生影响。")]),t._v(" "),a("p",[t._v("GPU 加速")]),t._v(" "),a("p",[t._v("transform 和 opacity 不会触发重排/重绘，而是走 GPU 合成层（Compositing），性能更高。")]),t._v(" "),a("p",[t._v("Visibility :占用空间（在渲染树，不会绘制）， display:none 不占用空间（不在渲染树）")]),t._v(" "),a("p",[t._v("v-if 和 v-show")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("指令")]),t._v(" "),a("th",[t._v("渲染方式")]),t._v(" "),a("th",[t._v("DOM 是否存在？")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("v-if")]),t._v(" "),a("td",[t._v("条件性渲染：当条件为 false 时，元素完全从 DOM 中移除。")]),t._v(" "),a("td",[t._v("不存在（条件为 false 时）")])]),t._v(" "),a("tr",[a("td",[t._v("v-show")]),t._v(" "),a("td",[t._v("显示/隐藏切换：通过 CSS display: none 控制，元素始终保留在 DOM 中。")]),t._v(" "),a("td",[t._v("存在（仅视觉隐藏）")])])])]),t._v(" "),a("p",[t._v("script defer 告诉浏览器立即下载，但延迟执行，只对外部的脚本有效\nscript async  可以和页面加载一起执行，可以和其他脚本一起执行，所以不应在加载中修改DOM.")]),t._v(" "),a("h2",{attrs:{id:"首屏加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首屏加载"}},[t._v("#")]),t._v(" 首屏加载")]),t._v(" "),a("h3",{attrs:{id:"首屏加载慢原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首屏加载慢原因"}},[t._v("#")]),t._v(" 首屏加载慢原因")]),t._v(" "),a("ul",[a("li",[t._v("网络原因：F12 Network 网络 切换 网速:快速4G")])]),t._v(" "),a("h3",{attrs:{id:"性能指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能指标"}},[t._v("#")]),t._v(" 性能指标")]),t._v(" "),a("ul",[a("li",[t._v("FP: First Paint：白屏时间")]),t._v(" "),a("li",[t._v("FCP: First Conent Paint (/peɪnt/)：首屏时间")]),t._v(" "),a("li",[t._v("LCP: Large Content(kɑːntent) Paint：最大内容绘制时间")]),t._v(" "),a("li",[t._v("TTI： time to interactive 可交互时间")]),t._v(" "),a("li",[t._v("TTFB：time to first byte 首字节时间 网络性能 服务器响应能力")])]),t._v(" "),a("h3",{attrs:{id:"如何收集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何收集"}},[t._v("#")]),t._v(" 如何收集")]),t._v(" "),a("p",[t._v("p95")]),t._v(" "),a("p",[t._v("其他性能优化手段：网络请求、资源预处理、资源压缩、资源的延后处理")]),t._v(" "),a("ul",[a("li",[t._v("dns 解析: "),a("code",[t._v("timing.domainLookupEnd - timing.domainLookupStart")])]),t._v(" "),a("li",[t._v("TTI 可交互时间："),a("code",[t._v("timing.domInteractive - timing.navigationStart")])])]),t._v(" "),a("h3",{attrs:{id:"优化首屏加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化首屏加载"}},[t._v("#")]),t._v(" 优化首屏加载")]),t._v(" "),a("h4",{attrs:{id:"静态资源处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源处理"}},[t._v("#")]),t._v(" 静态资源处理")]),t._v(" "),a("p",[t._v("包体积优化 tree shaking，eg: lodash")]),t._v(" "),a("h4",{attrs:{id:"vue3的异步组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3的异步组件"}},[t._v("#")]),t._v(" vue3的异步组件")]),t._v(" "),a("p",[t._v("首屏的组件需要某个条件才会显示在页面。（v-if，仍然加载组件资源）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vue3中的异步组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// import cropDialog from './cropDialog.vue';")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cropDialog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineAsyncComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cropDialog.vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"图片治理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片治理"}},[t._v("#")]),t._v(" 图片治理")]),t._v(" "),a("p",[t._v("base64图片，方案：图片占位+使用网络图片（cdn）(5s -> 3s)\n对于资源较小的文件，设置成base64,既可以减少请求，也不会影响到页面的加载性能。")]),t._v(" "),a("h4",{attrs:{id:"脚本治理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚本治理"}},[t._v("#")]),t._v(" 脚本治理")]),t._v(" "),a("h4",{attrs:{id:"css治理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css治理"}},[t._v("#")]),t._v(" css治理")]),t._v(" "),a("p",[t._v("unocss（原子化 css, 最小化 css 类为单位，实现高度可复用性，css文件尽可能小）")]),t._v(" "),a("h4",{attrs:{id:"减少http请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少http请求"}},[t._v("#")]),t._v(" 减少HTTP请求")]),t._v(" "),a("ul",[a("li",[t._v("合并CSS和JavaScript文件，减少HTTP请求数量。（跟自定义插件InlineChunkWebpackPlugin）")])]),t._v(" "),a("h4",{attrs:{id:"白屏时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#白屏时间"}},[t._v("#")]),t._v(" 白屏时间")]),t._v(" "),a("p",[t._v("骨架屏（有内容，让用户感觉快），Vue框架执行之前")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("优化视觉体验，白屏看起来不那么难受"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h4",{attrs:{id:"代码分割"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码分割"}},[t._v("#")]),t._v(" 代码分割")]),t._v(" "),a("p",[t._v("按需加载 或者 并行加载文件。（通过roolup-plugin-visualizer）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadlazy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./lazy.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"路由懒加载与组件懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载与组件懒加载"}},[t._v("#")]),t._v(" 路由懒加载与组件懒加载")]),t._v(" "),a("ul",[a("li",[t._v("路由懒加载：使用Vue Router的 import() 语法 动态加载路由组件，减少首屏加载的代码量。")]),t._v(" "),a("li",[t._v("组件懒加载：对于非首屏的组件，可以使用import() 语法进行懒加载。（tab页面）")])]),t._v(" "),a("h4",{attrs:{id:"按需引入ui组件库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按需引入ui组件库"}},[t._v("#")]),t._v(" 按需引入UI组件库")]),t._v(" "),a("h5",{attrs:{id:"推荐使用按需引入-自动导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推荐使用按需引入-自动导入"}},[t._v("#")]),t._v(" 推荐使用按需引入 + 自动导入")]),t._v(" "),a("ol",[a("li",[t._v("pnpm add -D unplugin-vue-components unplugin-auto-import")]),t._v(" "),a("li",[t._v("结合构建工具，进行打包配置")])]),t._v(" "),a("h3",{attrs:{id:"如何计算首屏加载时间-分析性能瓶颈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何计算首屏加载时间-分析性能瓶颈"}},[t._v("#")]),t._v(" 如何计算首屏加载时间/分析性能瓶颈")]),t._v(" "),a("h4",{attrs:{id:"性能监控与分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能监控与分析"}},[t._v("#")]),t._v(" 性能监控与分析")]),t._v(" "),a("p",[t._v("使用工具（如Lighthouse、WebPageTest）分析应用性能，找出瓶颈并进行针对性优化。")]),t._v(" "),a("h4",{attrs:{id:"使用performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用performance"}},[t._v("#")]),t._v(" 使用Performance")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vue项目")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MDN：timing即将废弃的属性")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" performance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domComplete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" performance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"🚀 ~ timing:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改写")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 观察的性能事件被记录时将调用 PerformanceObserverCallback 回调。调用回调时，其第一个参数是 性能观察条目列表，第二个参数是 观察者 对象。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entry")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domComplete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("entryTypes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"navigation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("navigationStart: 页面导航开始的时间戳")]),t._v(" "),a("li",[t._v("unloadEventStart: 卸载前一个页面的事件开始时间")]),t._v(" "),a("li",[t._v("unloadEventEnd: 卸载前一个页面的事件结束时间")]),t._v(" "),a("li",[t._v("redirectStart: 第一个重定向开始的时间")]),t._v(" "),a("li",[t._v("redirectEnd: 最后一个重定向结束的时间")]),t._v(" "),a("li",[t._v("fetchStart: 浏览器开始获取文档的时间")]),t._v(" "),a("li",[t._v("domainLookupStart: DNS 查询开始的时间")]),t._v(" "),a("li",[t._v("domainLookupEnd: DNS 查询结束的时间")]),t._v(" "),a("li",[t._v("connectStart: TCP 连接开始的时间")]),t._v(" "),a("li",[t._v("connectEnd: TCP 连接结束的时间")]),t._v(" "),a("li",[t._v("sourceConnectionStart: 安全连接开始的时间（仅HTTPS）")]),t._v(" "),a("li",[t._v("requestStart: 浏览器向服务器发送请求的时间")]),t._v(" "),a("li",[t._v("responseStart: 浏览器从服务器接收第一个字节的时间")]),t._v(" "),a("li",[t._v("responseEnd: 浏览器从服务器接收最后一个字节的时间")]),t._v(" "),a("li",[t._v("domLoading: 解析器开始解析 DOM 的时间")]),t._v(" "),a("li",[t._v("domInteractive: DOM 解析完成，但资源（如图片、样式表）可能仍在加载的时间")]),t._v(" "),a("li",[t._v("domContentLoadedEventStart: DOMContentLoaded 事件开始的时间")]),t._v(" "),a("li",[t._v("domContentLoadedEventEnd: DOMContentLoaded 事件结束的时间")]),t._v(" "),a("li",[t._v("domComplete: DOM 和所有子资源都已完全加载的时间")]),t._v(" "),a("li",[t._v("loadEventStart: load 事件开始的时间")]),t._v(" "),a("li",[t._v("loadEventEnd: load 事件结束的时间")])]),t._v(" "),a("h4",{attrs:{id:"f12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f12"}},[t._v("#")]),t._v(" F12")]),t._v(" "),a("p",[t._v("NetWork网络 右下角有个加载时间load：453毫秒，这就是首屏加载时间")]),t._v(" "),a("h2",{attrs:{id:"更新优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新优化"}},[t._v("#")]),t._v(" 更新优化")]),t._v(" "),a("h3",{attrs:{id:"使用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用指令"}},[t._v("#")]),t._v(" 使用指令")]),t._v(" "),a("ul",[a("li",[t._v("v-once")]),t._v(" "),a("li",[t._v("v-memo")])]),t._v(" "),a("h3",{attrs:{id:"通用的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用的优化"}},[t._v("#")]),t._v(" 通用的优化")]),t._v(" "),a("p",[t._v("长列表 - 虚拟滚动")]),t._v(" "),a("h3",{attrs:{id:"减少大型不可变数据的响应性的开销"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少大型不可变数据的响应性的开销"}},[t._v("#")]),t._v(" 减少大型不可变数据的响应性的开销")]),t._v(" "),a("ul",[a("li",[t._v("shallowRef")])]),t._v(" "),a("h3",{attrs:{id:"避免不必要组件抽象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免不必要组件抽象"}},[t._v("#")]),t._v(" 避免不必要组件抽象")]),t._v(" "),a("p",[t._v("无内容的template。")])])}),[],!1,null,null,null);a.default=r.exports}}]);